image:
    - Visual Studio 2022
    - Visual Studio 2019

init:
    - git config --global core.autocrlf input

clone_folder: c:\projects\cc_tools_qt
shallow_clone: true             

platform:
    - x64
    - x86

configuration:
    - Debug
    - Release

environment:
    COMMS_TAG: v5.2.2
    CC_TOOLS_QT_TAG: v5.0
    CC_MQTT5_GENERATED_TAG: v2.5
    CC_MQTT5_LIBS_TAG: v0.3
    matrix:
        - CPP_STD: 17
          QT_MAJOR: 5
        - CPP_STD: 17
          QT_MAJOR: 6          
        - CPP_STD: 20
          QT_MAJOR: 5
        - CPP_STD: 20
          QT_MAJOR: 6

matrix:
    fast_finish: false
    exclude:
        - image: Visual Studio 2017
          CPP_STD: 20         
        - image: Visual Studio 2017
          QT_MAJOR: 6
        - platform: x86
          QT_MAJOR: 6          
        
install:
    - call script\appveyor_install.bat
    - set PATH=%PATH%;%QTDIR%\bin
    - set BUILD_DIR=%APPVEYOR_BUILD_FOLDER%\build.%PLATFORM%.%CONFIGURATION%.%TOOLCHAIN%
    - if exist %BUILD_DIR% rmdir /S /Q %BUILD_DIR%
    - set COMMS_TAG=%COMMS_TAG%
    - set CC_TOOLS_QT_TAG=%CC_TOOLS_QT_TAG%
    - set CC_MQTT5_GENERATED_TAG=%CC_MQTT5_GENERATED_TAG%
    - set CC_MQTT5_LIBS_TAG=%CC_MQTT5_LIBS_TAG%
    - set COMMON_INSTALL_DIR=%BUILD_DIR%\install
    - set COMMON_BUILD_TYPE=%CONFIGURATION%
    - set COMMON_CXX_STANDARD=%CPP_STD%
    - set COMMON_QT_VER=%QT_MAJOR%
    - set GENERATOR="%CMAKE_GENERATOR%"
    - set PLATFORM="%CMAKE_PLATFORM%"
    - call script\prepare_externals.bat

build_script:
    - echo ------------------------- Building Project -------------------------
    - cd %BUILD_DIR%
    - cmake .. -DCMAKE_BUILD_TYPE=%CONFIGURATION% -G "%CMAKE_GENERATOR%" %PLATFORM_PARAM% -DCMAKE_INSTALL_PREFIX="%COMMON_INSTALL_DIR%" ^
        -DCMAKE_PREFIX_PATH="%COMMON_INSTALL_DIR%;%QTDIR%" -DCMAKE_CXX_STANDARD=%CPP_STD% ^
        -DOPT_MAJOR_QT_VERSION=%QT_MAJOR%
    - cmake --build . --config %CONFIGURATION% --target install


