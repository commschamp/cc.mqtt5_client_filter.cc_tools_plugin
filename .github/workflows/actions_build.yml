name: Github Actions Build

on: [push]

env:
  COMMS_TAG: develop
  CC_TOOLS_QT_TAG: develop
  CC_MQTT5_GENERATED_TAG: v2.6
  CC_MQTT5_LIBS_TAG: develop

jobs:

  build_gcc_ubuntu_22_04:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        cc_ver: [9, 10, 11, 12]
        cpp: [17, 20]
        qt_ver: [5, 6]

    steps:
    - uses: actions/checkout@v4

    - name: Prepare Install
      run: sudo apt-get update --fix-missing    
      
    - name: Install Packages
      run: sudo apt install qtbase5-dev qt6-base-dev libqt${{matrix.qt_ver}}serialport${{matrix.qt_ver}}-dev gcc-${{matrix.cc_ver}} g++-${{matrix.cc_ver}}

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build      

    - name: Prepare externals
      shell: bash
      run: $GITHUB_WORKSPACE/script/prepare_externals.sh
      env:
        BUILD_DIR: ${{runner.workspace}}/build
        CC: gcc-${{matrix.cc_ver}}
        CXX: g++-${{matrix.cc_ver}}
        EXTERNALS_DIR: ${{runner.workspace}}/externals
        COMMON_INSTALL_DIR: ${{runner.workspace}}/build/install
        COMMON_BUILD_TYPE: ${{matrix.type}}
        COMMON_CXX_STANDARD: ${{matrix.cpp}}
        COMMON_QT_VER: ${{matrix.qt_ver}}
        COMMS_TAG: ${{env.COMMS_TAG}}
        CC_TOOLS_QT_TAG: ${{env.CC_TOOLS_QT_TAG}}
        CC_MQTT5_GENERATED_TAG: ${{env.CC_MQTT5_GENERATED_TAG}}
        CC_MQTT5_LIBS_TAG: ${{env.CC_MQTT5_LIBS_TAG}}

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_INSTALL_PREFIX=install \
          -DCMAKE_PREFIX_PATH=${{runner.workspace}}/build/install -DCMAKE_CXX_STANDARD=${{matrix.cpp}} \
          -DOPT_QT_MAJOR_VERSION=${{matrix.qt_ver}}
      env:
        CC: gcc-${{matrix.cc_ver}}
        CXX: g++-${{matrix.cc_ver}}

    - name: Build Target 
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.type}} --target install
      env:
        VERBOSE: 1         
      
  build_clang_ubuntu_22_04:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        cc_ver: [11, 12, 13, 14, 15]
        cpp: [17, 20]
        qt_ver: [5, 6]
        exclude:
          - cc_ver: 11
            cpp: 20
          - cc_ver: 12
            cpp: 20   
          - cc_ver: 13
            cpp: 20   
          - cc_ver: 14
            cpp: 20      

    steps:
    - uses: actions/checkout@v4

    - name: Prepare Install
      run: sudo apt-get update --fix-missing    
      
    - name: Install Packages
      run: sudo apt install qtbase5-dev qt6-base-dev libqt${{matrix.qt_ver}}serialport${{matrix.qt_ver}}-dev clang-${{matrix.cc_ver}}

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build      

    - name: Prepare externals
      shell: bash
      run: $GITHUB_WORKSPACE/script/prepare_externals.sh
      env:
        BUILD_DIR: ${{runner.workspace}}/build
        CC: clang-${{matrix.cc_ver}}
        CXX: clang++-${{matrix.cc_ver}}
        EXTERNALS_DIR: ${{runner.workspace}}/externals
        COMMON_INSTALL_DIR: ${{runner.workspace}}/build/install
        COMMON_BUILD_TYPE: ${{matrix.type}}
        COMMON_CXX_STANDARD: ${{matrix.cpp}}
        COMMON_QT_VER: ${{matrix.qt_ver}}
        COMMS_TAG: ${{env.COMMS_TAG}}
        CC_TOOLS_QT_TAG: ${{env.CC_TOOLS_QT_TAG}}
        CC_MQTT5_GENERATED_TAG: ${{env.CC_MQTT5_GENERATED_TAG}}
        CC_MQTT5_LIBS_TAG: ${{env.CC_MQTT5_LIBS_TAG}}        

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_INSTALL_PREFIX=install \
          -DCMAKE_PREFIX_PATH=${{runner.workspace}}/build/install -DCMAKE_CXX_STANDARD=${{matrix.cpp}} \
          -DOPT_QT_MAJOR_VERSION=${{matrix.qt_ver}}
      env:
        CC: clang-${{matrix.cc_ver}}
        CXX: clang++-${{matrix.cc_ver}}

    - name: Build Target 
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.type}} --target install
      env:
        VERBOSE: 1 

  build_msvc_2019:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        arch: [x64]
        cpp: [17]
        qt_ver: [5]

    steps:
    - uses: actions/checkout@v4

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build   

    - name: Install Qt
      shell: cmd
      run: |
        choco install curl
        curl -L ${{env.QT5_MSVC2019_URL}} -o ${{runner.workspace}}/qt.7z
        7z x ${{runner.workspace}}/qt.7z -o${{runner.workspace}}/qt
      env:
        QT5_MSVC2019_URL: https://github.com/martinrotter/qt-minimalistic-builds/releases/download/5.15.3/qt-5.15.3-dynamic-msvc2019-x86_64.7z

    - name: Prepare externals
      shell: cmd
      run: |
        %GITHUB_WORKSPACE%\script\prepare_externals.bat
      env:
        BUILD_DIR: ${{runner.workspace}}/build
        PLATFORM: ${{matrix.arch}}
        EXTERNALS_DIR: ${{runner.workspace}}/externals
        COMMON_INSTALL_DIR: ${{runner.workspace}}/build/install
        COMMON_BUILD_TYPE: ${{matrix.type}}
        COMMON_CXX_STANDARD: ${{matrix.cpp}}
        COMMON_QT_VER: ${{matrix.qt_ver}}
        COMMS_TAG: ${{env.COMMS_TAG}}
        CC_TOOLS_QT_TAG: ${{env.CC_TOOLS_QT_TAG}}
        CC_MQTT5_GENERATED_TAG: ${{env.CC_MQTT5_GENERATED_TAG}}
        CC_MQTT5_LIBS_TAG: ${{env.CC_MQTT5_LIBS_TAG}}           
        QTDIR: ${{runner.workspace}}/qt/qt-5.15.3-dynamic-msvc2019-x86_64

    - name: Configure CMake
      shell: cmd
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake %GITHUB_WORKSPACE% -A ${{matrix.arch}} -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_INSTALL_PREFIX=install ^
          -DCMAKE_PREFIX_PATH="${{runner.workspace}}/build/install;${{runner.workspace}}/qt/qt-5.15.3-dynamic-msvc2019-x86_64" -DCMAKE_CXX_STANDARD=${{matrix.cpp}} ^
          -DOPT_QT_MAJOR_VERSION=${{matrix.qt_ver}}   

    - name: Build Target 
      working-directory: ${{runner.workspace}}/build
      shell: cmd
      run: cmake --build . --config ${{matrix.type}} --target install
      env:
        VERBOSE: 1     
